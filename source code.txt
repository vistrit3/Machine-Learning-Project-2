from tkinter import *
from tkinter import ttk,messagebox
import googletrans
from googletrans import Translator
import speech_recognition as sr
"""from gtts import gTTS
import os"""
import pyttsx3


engine=pyttsx3.init("sapi5")
voices=engine.getProperty("voices")
engine.setProperty('voice',voices[0].id)
engineh=pyttsx3.init("sapi5")
voicesh=engineh.getProperty("voices")
engineh.setProperty('voice','hindi')
engineh.setProperty('rate',170)
engineh.say("नमस्ते, आप कैसे हैं?")
engineh.runAndWait()
def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def bolo(audioh):
    engineh.say(audioh)
    engineh.runAndWait()

t=1
root=Tk()
root.title("MULTILINGUAL TRANSLATOR")
root.geometry('1080x500')
root.resizable(True,True)
root.configure(background="black")
g=" "
k=" "
import speech_recognition as sr
def hindi_speech_to_text():
    recognizer = sr.Recognizer()

    with sr.Microphone() as source:
        print("Speak something in Hindi...")
        recognizer.adjust_for_ambient_noise(source, duration=1)
        audio = recognizer.listen(source)

    try:
        print("Recognizing...")
        # Using Google Speech Recognition for Hindi language
        text = recognizer.recognize_google(audio, language='hi-IN')
        print("You said:", text)
    except sr.UnknownValueError:
        print("Sorry, I couldn't understand what you said.")
    except sr.RequestError as e:
        print("Could not request results from Google Speech Recognition service; {0}".format(e))


def convert_voice_to_text():
    if g=="english" or g=="English":
        # Initialize the recognizer
        recognizer = sr.Recognizer()

        # Use the default microphone as the audio source
        with sr.Microphone() as source:
         # Adjust for ambient noise
            recognizer.adjust_for_ambient_noise(source)
         # Listen to the user's speech
            audio = recognizer.listen(source)

        try:
            print("Recognizing...")
            # Use Google Web Speech API to convert speech to text
            textr = recognizer.recognize_google(audio)
            text1.delete(1.0,END)
            text1.insert(END,textr)
        except sr.UnknownValueError:
            print("Could not understand audio")
        except sr.RequestError as e:
            print("Error with the speech recognition service; {0}".format(e))
    elif g=="Hindi" or g=="hindi":
        recognizer = sr.Recognizer()

        with sr.Microphone() as source:
            recognizer.adjust_for_ambient_noise(source, duration=1)
            audio = recognizer.listen(source)

        try:
            print("Recognizing...")
            # Using Google Speech Recognition for Hindi language
            texth= recognizer.recognize_google(audio, language='hi-IN')
            text1.delete(1.0,END)
            text1.insert(END,texth)
        except sr.UnknownValueError:
            print("Could not understand audio")
        except sr.RequestError as e:
            print("Error with the speech recognition service; {0}".format(e))

    elif g=="tamil":
        recognizer = sr.Recognizer()

        with sr.Microphone() as source:
            recognizer.adjust_for_ambient_noise(source, duration=1)
            audio = recognizer.listen(source)

        try:
            print("Recognizing...")
            # Using Google Speech Recognition for Hindi language
            textt= recognizer.recognize_google(audio, language='ta-IN')
            text1.delete(1.0,END)
            text1.insert(END,textt)
        except sr.UnknownValueError:
            print("Could not understand audio")
        except sr.RequestError as e:
            print("Error with the speech recognition service; {0}".format(e))
    elif g=="bengali":
        recognizer = sr.Recognizer()

        with sr.Microphone() as source:
            recognizer.adjust_for_ambient_noise(source, duration=1)
            audio = recognizer.listen(source)

        try:
            print("Recognizing...")
            # Using Google Speech Recognition for Hindi language
            textb= recognizer.recognize_google(audio, language='bn-IN')
            text1.delete(1.0,END)
            text1.insert(END,textb)
        except sr.UnknownValueError:
            print("Could not understand audio")
        except sr.RequestError as e:
            print("Error with the speech recognition service; {0}".format(e))

    elif g=="punjabi":
        recognizer = sr.Recognizer()

        with sr.Microphone() as source:
            recognizer.adjust_for_ambient_noise(source, duration=1)
            audio = recognizer.listen(source)

        try:
            print("Recognizing...")
            # Using Google Speech Recognition for Hindi language
            textb= recognizer.recognize_google(audio, language='pu-IN')
            text1.delete(1.0,END)
            text1.insert(END,textb)
        except sr.UnknownValueError:
            print("Could not understand audio")
        except sr.RequestError as e:
            print("Error with the speech recognition service; {0}".format(e))

    else:
        print("can't do anything")
    


def label_change():
    global g, k
    g = combo1.get()  # Get selected value of combo1
    k = combo2.get()  # Get selected value of combo2
    label1.configure(text=g)
    label2.configure(text=k)
    root.after(1000, label_change)

def translate_now():
    text_=text1.get(1.0,END)
    t1=Translator()
    trans_text=t1.translate(text_,src=combo1.get(),dest=combo2.get())
    trans_text=trans_text.text

    text2.delete(1.0,END)
    text2.insert(END,trans_text)
    if k=="english" or k=="English":
        speak(trans_text)
        """hindi_voice = gTTS(text=trans_text, lang='hi')
        hindi_voice.save("translated_audio.mp3")
        os.system("start translated_audio.mp3")"""
    elif k=="hindi" or k=="Hindi":
        bolo(trans_text)


#icon
image_icon=PhotoImage(file="icon.png")
root.iconphoto(False,image_icon)

#arrow
arrow_image=PhotoImage(file="arrow.png")
image_label=Label(root,image=arrow_image,width=150,height=150)
image_label.place(x=455,y=190)

language=googletrans.LANGUAGES
languageV=list(language.values())
lang1=language.keys()
#firstlanguage
combo1=ttk.Combobox(root,values=languageV,font="roboto 14",state="r",background="red")
combo1.place(x=110,y=20)
combo1.set("English")
label1=Label(root,text="ENGLISH",font="segoe 30 bold",bg="white",width=18,bd=5,relief=GROOVE)
label1.place(x=10,y=50)

#second language
combo2=ttk.Combobox(root,values=languageV,font="roboto 14",state="r")
combo2.place(x=730,y=20)
combo2.set("Hindi")
label2=Label(root,text="ENGLISH",font="segoe 30 bold",bg="white",width=18,bd=5,relief=GROOVE)
label2.place(x=620,y=50)



#first frame
f=Frame(root,bg="Black")
f.place(x=10,y=118,width=430,height=300)

text1=Text(f,font="Robote 20",bg="white",width=18,bd=5,relief=GROOVE)
text1.place(x=0,y=0,width=430,height=300)

scrollbar1=Scrollbar(f)
scrollbar1.pack(side="right",fill='y')

scrollbar1.configure(command=text1.yview)
text1.configure(yscrollcommand=scrollbar1.set)


#second frame
f1=Frame(root,bg="Black")
f1.place(x=620,y=118,width=430,height=300)

text2=Text(f1,font="Robote 20",bg="white",width=18,bd=5,relief=GROOVE)
text2.place(x=0,y=0,width=430,height=300)

scrollbar2=Scrollbar(f1)
scrollbar2.pack(side="right",fill='y')

scrollbar2.configure(command=text2.yview)
text2.configure(yscrollcommand=scrollbar2.set)


#translate
translate=Button(root,text="Translate",font=("Roboto",15),activebackground="blue",cursor="hand2",bd=2,width=10,height=1,bg="black",fg="white",command=translate_now)
translate.place(x=470,y=420)

#mic
mic=Button(root,text="MIC",font=("Roboto",15),activebackground="blue",cursor="hand2",bd=2,width=10,height=1,bg="black",fg="white",command=convert_voice_to_text)
mic.place(x=478,y=59)


label_change()

root.mainloop()